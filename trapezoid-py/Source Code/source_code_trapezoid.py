# -*- coding: utf-8 -*-
"""Source Code Simpson.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Aywc95Wr-SZKPDkClFqzunhpiG52aeye
"""

import matplotlib.pyplot as plt
from scipy import stats
import math

def function(x):
  return 3*x**2+4*x+1

a = 5
b = 0
n = int(input("Nilai n= "))

def simpsonMethod(function, a, b, n):
  h = (b-a)/n

  sumGanjil = 0.0
  sumGenap = 0.0

  for i in range(1,n):
    if not i%2 == 0:
      x = a + i * h
      sumGanjil += function(x)
    if i%2 == 0:
      x = a + i * h
      sumGenap += function (x)
  i = (h/3) * (function(a) + 4*sumGanjil + 2*sumGenap + function(b))
  return i



integralNumerik = simpsonMethod(function, a, b, n)
galat = (round(integralNumerik) - integralNumerik)

print(round(abs(integralNumerik)))
print("Galat = ",galat)

# Define function to integrate
def f(x):
    return 2*x*x*x

# Implementing trapezoidal method
def trapezoidal(x0,xn,n):
    # calculating step size
    h = (xn - x0) / n
    
    # Finding sum 
    integration = f(x0) + f(xn)
    
    for i in range(1,n):
        k = x0 + i*h
        integration = integration + 2 * f(k)
    
    # Finding final integration value
    integration = integration * h/2
    
    return integration
    
# Input section
lower_limit = float(input("Masukkan batas bawah: "))
upper_limit = float(input("Masukkan batas atas: "))
sub_interval = int(input("Enter number of sub intervals: "))

# Call trapezoidal() method and get result
result = trapezoidal(lower_limit, upper_limit, sub_interval)
print("Integration result by Trapezoidal method is: %0.6f" % (result) )